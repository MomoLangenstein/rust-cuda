(function() {var implementors = {};
implementors["rust_cuda"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/common/struct.DeviceOwnedSlice.html\" title=\"struct rust_cuda::common::DeviceOwnedSlice\">DeviceOwnedSlice</a>&lt;T&gt;","synthetic":true,"types":["rust_cuda::common::DeviceOwnedSlice"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/common/struct.DeviceBoxConst.html\" title=\"struct rust_cuda::common::DeviceBoxConst\">DeviceBoxConst</a>&lt;T&gt;","synthetic":true,"types":["rust_cuda::common::DeviceBoxConst"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/common/struct.DeviceBoxMut.html\" title=\"struct rust_cuda::common::DeviceBoxMut\">DeviceBoxMut</a>&lt;T&gt;","synthetic":true,"types":["rust_cuda::common::DeviceBoxMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rust_cuda/host/struct.LaunchConfig.html\" title=\"struct rust_cuda::host::LaunchConfig\">LaunchConfig</a>","synthetic":true,"types":["rust_cuda::host::LaunchConfig"]},{"text":"impl&lt;KernelTraitObject:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/host/struct.TypedKernel.html\" title=\"struct rust_cuda::host::TypedKernel\">TypedKernel</a>&lt;KernelTraitObject&gt;","synthetic":true,"types":["rust_cuda::host::TypedKernel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rust_cuda/host/struct.NullCudaAlloc.html\" title=\"struct rust_cuda::host::NullCudaAlloc\">NullCudaAlloc</a>","synthetic":true,"types":["rust_cuda::host::NullCudaAlloc"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/host/struct.CombinedCudaAlloc.html\" title=\"struct rust_cuda::host::CombinedCudaAlloc\">CombinedCudaAlloc</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["rust_cuda::host::CombinedCudaAlloc"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/host/struct.CudaDropWrapper.html\" title=\"struct rust_cuda::host::CudaDropWrapper\">CudaDropWrapper</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["rust_cuda::host::CudaDropWrapper"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/host/struct.HostDeviceBoxMut.html\" title=\"struct rust_cuda::host::HostDeviceBoxMut\">HostDeviceBoxMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rust_cuda::host::HostDeviceBoxMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/host/struct.HostDeviceBoxConst.html\" title=\"struct rust_cuda::host::HostDeviceBoxConst\">HostDeviceBoxConst</a>&lt;'a, T&gt;","synthetic":true,"types":["rust_cuda::host::HostDeviceBoxConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rust_cuda/device/utils/struct.PTXAllocator.html\" title=\"struct rust_cuda::device::utils::PTXAllocator\">PTXAllocator</a>","synthetic":true,"types":["rust_cuda::device::utils::PTXAllocator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rust_cuda/device/utils/struct.Dim3.html\" title=\"struct rust_cuda::device::utils::Dim3\">Dim3</a>","synthetic":true,"types":["rust_cuda::device::utils::Dim3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rust_cuda/device/utils/struct.Idx3.html\" title=\"struct rust_cuda::device::utils::Idx3\">Idx3</a>","synthetic":true,"types":["rust_cuda::device::utils::Idx3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rust_cuda/device/struct.AnyDeviceBoxConst.html\" title=\"struct rust_cuda::device::AnyDeviceBoxConst\">AnyDeviceBoxConst</a>","synthetic":true,"types":["rust_cuda::device::AnyDeviceBoxConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rust_cuda/device/struct.AnyDeviceBoxMut.html\" title=\"struct rust_cuda::device::AnyDeviceBoxMut\">AnyDeviceBoxMut</a>","synthetic":true,"types":["rust_cuda::device::AnyDeviceBoxMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/utils/exchange/buffer/struct.CudaExchangeBufferDevice.html\" title=\"struct rust_cuda::utils::exchange::buffer::CudaExchangeBufferDevice\">CudaExchangeBufferDevice</a>&lt;T&gt;","synthetic":true,"types":["rust_cuda::utils::exchange::buffer::device::CudaExchangeBufferDevice"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/utils/exchange/buffer/struct.CudaExchangeBuffer.html\" title=\"struct rust_cuda::utils::exchange::buffer::CudaExchangeBuffer\">CudaExchangeBufferHost</a>&lt;T&gt;","synthetic":true,"types":["rust_cuda::utils::exchange::buffer::host::CudaExchangeBufferHost"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/utils/exchange/wrapper/struct.ExchangeWithCudaWrapper.html\" title=\"struct rust_cuda::utils::exchange::wrapper::ExchangeWithCudaWrapper\">ExchangeWithCudaWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rust_cuda::utils::exchange::wrapper::ExchangeWithCudaWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/utils/exchange/wrapper/struct.ExchangeWithHostWrapper.html\" title=\"struct rust_cuda::utils::exchange::wrapper::ExchangeWithHostWrapper\">ExchangeWithHostWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"rust_cuda/common/trait.RustToCuda.html\" title=\"trait rust_cuda::common::RustToCuda\">RustToCuda</a>&gt;::<a class=\"type\" href=\"rust_cuda/common/trait.RustToCuda.html#associatedtype.CudaAllocation\" title=\"type rust_cuda::common::RustToCuda::CudaAllocation\">CudaAllocation</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"rust_cuda/common/trait.RustToCuda.html\" title=\"trait rust_cuda::common::RustToCuda\">RustToCuda</a>&gt;::<a class=\"type\" href=\"rust_cuda/common/trait.RustToCuda.html#associatedtype.CudaRepresentation\" title=\"type rust_cuda::common::RustToCuda::CudaRepresentation\">CudaRepresentation</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rust_cuda::utils::exchange::wrapper::ExchangeWithHostWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rust_cuda/utils/stack/struct.StackOnlyDeviceCopy.html\" title=\"struct rust_cuda::utils::stack::StackOnlyDeviceCopy\">StackOnlyDeviceCopy</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rust_cuda::utils::stack::StackOnlyDeviceCopy"]}];
implementors["rust_cuda_ptx_jit"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rust_cuda_ptx_jit/host/compiler/struct.PtxJITCompiler.html\" title=\"struct rust_cuda_ptx_jit::host::compiler::PtxJITCompiler\">PtxJITCompiler</a>","synthetic":true,"types":["rust_cuda_ptx_jit::host::compiler::PtxJITCompiler"]},{"text":"impl&lt;'s&gt; Freeze for <a class=\"enum\" href=\"rust_cuda_ptx_jit/host/compiler/enum.PtxJITResult.html\" title=\"enum rust_cuda_ptx_jit::host::compiler::PtxJITResult\">PtxJITResult</a>&lt;'s&gt;","synthetic":true,"types":["rust_cuda_ptx_jit::host::compiler::PtxJITResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rust_cuda_ptx_jit/host/kernel/struct.CudaKernel.html\" title=\"struct rust_cuda_ptx_jit::host::kernel::CudaKernel\">CudaKernel</a>","synthetic":true,"types":["rust_cuda_ptx_jit::host::kernel::CudaKernel"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()